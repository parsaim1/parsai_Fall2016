
public class Calculate {
	public static int square(int number) {
		int answer = number * number;
		return answer;
	}
	
	public static int cube(int number) {
		int answer = number * number * number;
		return answer;
	}
	
	public static double average(double x, double y) {
		double answer = (x + y) / 2;
		return answer;
	}
	
	public static double average(double x, double y, double z) {
		double answer = (x + y + z) / 3;
		return answer;
	}
	
	public static double toDegrees(double radian) {
		double answer = radian * 57.2958;
		return answer;
	}
	
	public static double toRadians(double degrees) {
		double answer = degrees / 57.2958;
		return answer;
	}
	
	public static double discriminant(double x, double y, double z) {
		double answer = y * y - 4 * x * z;
		return answer;
	}
	
	public static String toImproperFrac(int x, int y, int z) {
		String answer = (x * z + y) + "/" + z;
		return answer;
	}
	
	public static String toMixedNum(int x, int y) {
		String answer = (x / y) + " " + (x % y) + "/" + y;
		return answer;
	}
	 
	public static String foil(int w, int x, int y, int z, String n) {
		String answer = (w * y) + "n^2 + " + (w * z + x * y) + "n + " + (x * z);
		return answer;
	}
	
	public static int isDivisibleBy(int x, int y) {
		int answer = x % y;
		return answer;
	}
	
	public static double absValue(double x) {
		if (x >= 0) {
			double answer = x;
			return answer;
		} 
		else {
			double answer = (-1) * x;
			return answer;
		}
	}
		
	public static int max(int x, int y) {
		if (x >= y) {
			int answer = x;
			return answer;
		}
		else {
			int answer = y;
			return answer;
		}
	}
	
	public static double max(double x, double y, double z) {
		if (x >= y && y >= z) {
			return x;
		}
		else if (x >= z && z > y) {
			return x;
		}
		else if (y > x && x >= z) {
			return y;
		}
		else if (y >= z && z > x) {
			return y;
		}
		else {
			return z;
		}
	}
	
	public static int min(int x, int y) {
		if (x <= y) {
			return x;
		}
		else {
			return y;
		}
	}
	
	public static double round2(double x) {
		double start = (x * 100) + .5;
		int start2 = (int) start;
		double answer = start2 / 100.0;
		return answer;
	}
	
	public static double exponent(double base, int exponent) {
		if (exponent == 1) {
			return base;
		}
		else {
			for (int i = 2; i <= exponent; i++) {
				base *= base;  
			}
			return base;
		}
	}
	
	public static int factorial(int x) {
		if (x > 0) {
			int growingNumb = 1;
			for (int j = 1; j < x; j++) {
				int oneMore = (j + 1);
				growingNumb = growingNumb * oneMore;
			}
			return growingNumb;
		} else {
			throw new IllegalArgumentException("The original number must be positive");
		}
	}
}


